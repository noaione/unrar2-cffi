name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  UNRAR_VERSION: 6.2.8

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: 3.9

      - name: Set up unrar
        run: |
          mkdir -p unrarsrc
          curl -L https://www.rarlab.com/rar/unrarsrc-${UNRAR_VERSION}.tar.gz -o unrar.tar.gz
          tar -xzf unrar.tar.gz -C unrarsrc --strip-components=1
          rm unrar.tar.gz

      - name: Check metadata
        run: "python setup.py check"

      - name: Build sdist
        run: "python setup.py sdist && ls -l dist"

      - uses: actions/upload-artifact@v3
        with:
          name: unrar2-cffi
          path: ./dist/unrar2-cffi-*.tar.gz

  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        # Copied from numpy
        buildplat:
          - [ubuntu-22.04, manylinux_x86_64]
          - [ubuntu-22.04, musllinux_x86_64]
          - [macos-12, macosx_x86_64]
          - [windows-2019, win_amd64]
          - [windows-2019, win32]
        python: ["3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Don't build PyPy 32-bit windows
          - buildplat: [windows-2019, win32]
            python: "pp39"
          - buildplat: [ ubuntu-20.04, musllinux_x86_64 ]
            python: "pp39"
    runs-on: ${{ matrix.buildplat[0] }}
    env:
      IS_32_BIT: ${{ matrix.buildplat[1] == 'win32' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup MSVC (32-bit)
        if: ${{ matrix.buildplat[1] == 'win32' }}
        uses: bus1/cabuild/action/msdevshell@e22aba57d6e74891d059d66501b6b5aed8123c4d  # v1
        with:
          architecture: 'x86'

      - name: Set up unrar
        run: |
          mkdir -p unrarsrc
          curl -L https://www.rarlab.com/rar/unrarsrc-${UNRAR_VERSION}.tar.gz -o unrar.tar.gz
          tar -xzf unrar.tar.gz -C unrarsrc --strip-components=1
          rm unrar.tar.gz

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
      
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        env:
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
        with:
          name: unrar2-cffi
          path: |
            ./wheelhouse/*.whl
