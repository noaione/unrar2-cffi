name: Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  UNRAR_VERSION: 6.2.8
  UNRAR_REV: df15c8c3c9f4105d3501bc477e80ac6b8e227677

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: 3.9

      - name: Set up unrar
        run: |
          git clone https://github.com/pmachapman/unrar.git unrarsrc
          cd unrarsrc
          git checkout ${UNRAR_REV}
          rm -rf .git
          cd ..
          python3 tools/apply_patches.py

      - name: Check metadata
        run: "python setup.py check"

      - name: Build sdist
        run: "python setup.py sdist && ls -l dist"

      - uses: actions/upload-artifact@v3
        with:
          name: unrar2-cffi
          path: ./dist/unrar2-cffi-*.tar.gz

  build_wheels:
    strategy:
      fail-fast: false
      matrix:
        # Copied from numpy
        buildplat:
          - [ubuntu-22.04, manylinux_x86_64]
          - [ubuntu-22.04, musllinux_x86_64]
          - [macos-12, macosx_x86_64]
          - [windows-2019, win_amd64]
          - [windows-2019, win32]

    runs-on: ${{ matrix.buildplat[0] }}
    env:
      IS_32_BIT: ${{ matrix.buildplat[1] == 'win32' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # - name: Install MSVC 2015 (v140) and Windows 8.1 SDK
      #   if: runner.os == 'Windows'
      #   shell: powershell
      #   run: |
      #     $VS_BTOOLS_EXE="vs_buildtools.exe"
      #     $VS_BTOOLS_URI="https://aka.ms/vs/15/release/vs_buildtools.exe"
      #     Invoke-WebRequest -Uri $VS_BTOOLS_URI -OutFile $VS_BTOOLS_EXE
      #     Start-Process -FilePath ./vs_BuildTools.exe -ArgumentList `
      #     "--add", "Microsoft.VisualStudio.Component.VC.140", `
      #     "--add", "Microsoft.VisualStudio.Component.Windows81SDK", `
      #     "--norestart", "--force", "--wait" -Wait -PassThru

      - name: Setup MSVC (x64)
        if: runner.os == 'Windows' && matrix.buildplat[1] == 'win_amd64'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
          sdk: "10.0.22621.0"
          toolset: 14.0

      - name: Setup MSVC (x64)
        if: runner.os == 'Windows' && matrix.buildplat[1] == 'win32'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x86
          sdk: "10.0.22621.0"
          toolset: 14.3

      - name: Set up unrar
        run: |
          git clone https://github.com/pmachapman/unrar.git unrarsrc
          cd unrarsrc
          git checkout ${UNRAR_REV}
          cd ..
          python3 tools/apply_patches.py

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_PRERELEASE_PYTHONS: True
          CIBW_BUILD: "*-${{ matrix.buildplat[1] }}"
          # Do not build PyPy
          CIBW_SKIP: "pp*"
      
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: unrar2-cffi
          path: |
            ./wheelhouse/*.whl
